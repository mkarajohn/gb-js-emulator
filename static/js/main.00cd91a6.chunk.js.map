{"version":3,"sources":["memory.ts","opcodes.ts","registers.ts","cb-instructions.ts","utils.ts","instructions.ts","disassembler/index.ts","bootcode.ts","App.tsx","cpu.ts","index.js"],"names":["memory","Uint8Array","readMem","address","writeMem","value","highByte","lowByte","window","opcodes","index","mnemonic","bytes","cycles","operands","immediate","flags","Z","N","H","C","name","increment","decrement","cbPrefixedOpcodes","regA","regB","regC","regD","regE","regF","regH","regL","regSP","regPC","regAF","regBC","regDE","regHL","registers","setRegisterValue","register","registerPair","set16bitValues","highByteRegister","lowByteRegister","v","setRegisterPairValue","getRegisterValue","get16bitValues","getRegisterPairValue","logInstruction","opcodeToken","nop","cbInstructions","Array","i","length","convertNumberToHexString","n","toString","convertHexStringToDecimalNumber","s","parseInt","zeroPad","paddedLength","numberAsHexString","doPadding","hexString","pad","bit","checkBit","setFlags","currentRegFValue","registerValue","ld8Immediate","destination","source","ld16Immediate","ldd","valueHL","xorImmediate","instructions","generateDisassembledInstructionToken","bytecode","position","code","reduce","acc","operand","formattedOperand","replaceOperandTypeWithValue","PCregValue","bootCode","bootCodeUIntArr","emptyBootcode","App","useState","bootcode","setBootCode","useEffect","set","disassembledCode","dataRanges","opcode","dataByte","k","push","referencedObOpcodeToken","disassemble","className","height","width","type","onChange","e","target","files","reader","FileReader","onload","result","readAsArrayBuffer","map","line","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00cd91a6.chunk.js","sourcesContent":["/*\n * MEMORY MAP\n *\n * [$0000, $00FF] \tRestart and Interrupt Vectors  |\n * [$0100, $014F] \tCartridge Header Area          +-> 16KB Cartridge ROM - Bank 0\n * [$0150, $3FFF] \tCartridge ROM - Bank 0 (fixed) |\n * [$4000, $7FFF] \t16KB Cartridge ROM - Switchable Banks 1-xx\n * [$8000, $97FF] \tCharacter RAM                |\n * [$9800, $9BFF] \tBG Map Data 1 (bg or window) +-> 8KB Video RAM [8000, 9FFF]\n * [$9C00, $9FFF] \tBG Map Data 2 (bg or window) |\n * [$A000, $BFFF] \t8KB Cartridge RAM (If Available)\n * [$C000, $CFFF] \t4KB Internal RAM (Work RAM) - Bank 0 (fixed)\n * [$D000, $DFFF] \t4KB Internal RAM (Work RAM) - Bank 1-7 (switchable - CGB only)\n * [$E000, $FDFF] \tEcho RAM - Reserved, Do Not Use, Mirror of [C000,DDFF]\n * [$FE00, $FE9F] \tOAM - Object/Sprite Attribute Memory\n * [$FEA0, $FEFF] \tUnusable Memory\n * [$FF00, $FF7F] \tHardware I/O Registers\n * [$FF80, $FFFE] \tHRAM/Zero Page - 127 bytes\n * $FFFF       \tInterrupt Enable Flag\n *\n */\n\nexport const memory = new Uint8Array(0x10000);\n\nexport function readMem(address: number) {\n  return memory[address];\n}\n\nexport function writeMem(address: number, value: number) {\n  if (value > 0xff) {\n    const highByte = (value >> 8) & 0xff;\n    const lowByte = value & 0xff;\n\n    memory[address] = lowByte;\n    memory[address + 1] = highByte;\n  } else {\n    memory[address] = value;\n  }\n}\n\n//@ts-ignore\nwindow.memory = memory;\n//@ts-ignore\nwindow.readMem = readMem;\n//@ts-ignore\nwindow.writeMem = writeMem;\n","import { OpcodeToken } from 'types';\n\nexport const opcodes: OpcodeToken[] = [\n  {\n    index: 0x00,\n    mnemonic: 'NOP',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x01,\n    mnemonic: 'LD',\n    bytes: 3,\n    cycles: [12],\n    operands: [\n      {\n        name: 'BC',\n        immediate: true,\n      },\n      {\n        name: 'd16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x02,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'BC',\n        immediate: false,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x03,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'BC',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x04,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x05,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x06,\n    mnemonic: 'LD',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x07,\n    mnemonic: 'RLCA',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '0',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x08,\n    mnemonic: 'LD',\n    bytes: 3,\n    cycles: [20],\n    operands: [\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: false,\n      },\n      {\n        name: 'SP',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x09,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: true,\n      },\n      {\n        name: 'BC',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x0a,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'BC',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x0b,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'BC',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x0c,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x0d,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x0e,\n    mnemonic: 'LD',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x0f,\n    mnemonic: 'RRCA',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '0',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x10,\n    mnemonic: 'STOP',\n    bytes: 2,\n    cycles: [4],\n    operands: [\n      {\n        name: 'Ignored',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x11,\n    mnemonic: 'LD',\n    bytes: 3,\n    cycles: [12],\n    operands: [\n      {\n        name: 'DE',\n        immediate: true,\n      },\n      {\n        name: 'd16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x12,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'DE',\n        immediate: false,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x13,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'DE',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x14,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x15,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x16,\n    mnemonic: 'LD',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x17,\n    mnemonic: 'RLA',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '0',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x18,\n    mnemonic: 'JR',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 'r8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x19,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: true,\n      },\n      {\n        name: 'DE',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x1a,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'DE',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x1b,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'DE',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x1c,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x1d,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x1e,\n    mnemonic: 'LD',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x1f,\n    mnemonic: 'RRA',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '0',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x20,\n    mnemonic: 'JR',\n    bytes: 2,\n    cycles: [12, 8],\n    operands: [\n      {\n        name: 'NZ',\n        immediate: true,\n      },\n      {\n        name: 'r8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x21,\n    mnemonic: 'LD',\n    bytes: 3,\n    cycles: [12],\n    operands: [\n      {\n        name: 'HL',\n        immediate: true,\n      },\n      {\n        name: 'd16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x22,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        increment: true,\n        immediate: false,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x23,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x24,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x25,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x26,\n    mnemonic: 'LD',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x27,\n    mnemonic: 'DAA',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '-',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x28,\n    mnemonic: 'JR',\n    bytes: 2,\n    cycles: [12, 8],\n    operands: [\n      {\n        name: 'Z',\n        immediate: true,\n      },\n      {\n        name: 'r8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x29,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x2a,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        increment: true,\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x2b,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x2c,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x2d,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x2e,\n    mnemonic: 'LD',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x2f,\n    mnemonic: 'CPL',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '1',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x30,\n    mnemonic: 'JR',\n    bytes: 2,\n    cycles: [12, 8],\n    operands: [\n      {\n        name: 'NC',\n        immediate: true,\n      },\n      {\n        name: 'r8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x31,\n    mnemonic: 'LD',\n    bytes: 3,\n    cycles: [12],\n    operands: [\n      {\n        name: 'SP',\n        immediate: true,\n      },\n      {\n        name: 'd16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x32,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        decrement: true,\n        immediate: false,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x33,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'SP',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x34,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [12],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x35,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [12],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x36,\n    mnemonic: 'LD',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x37,\n    mnemonic: 'SCF',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '0',\n      H: '0',\n      C: '1',\n    },\n  },\n  {\n    index: 0x38,\n    mnemonic: 'JR',\n    bytes: 2,\n    cycles: [12, 8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'r8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x39,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: true,\n      },\n      {\n        name: 'SP',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x3a,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        decrement: true,\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x3b,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'SP',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x3c,\n    mnemonic: 'INC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x3d,\n    mnemonic: 'DEC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: '-',\n    },\n  },\n  {\n    index: 0x3e,\n    mnemonic: 'LD',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x3f,\n    mnemonic: 'CCF',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x40,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x41,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x42,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x43,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x44,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x45,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x46,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x47,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x48,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x49,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4a,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4b,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4c,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4d,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4e,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4f,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x50,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x51,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x52,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x53,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x54,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x55,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x56,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x57,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x58,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x59,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5a,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5b,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5c,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5d,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5e,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5f,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x60,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x61,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x62,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x63,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x64,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x65,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x66,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x67,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x68,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x69,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6a,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6b,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6c,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6d,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6e,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6f,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x70,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x71,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x72,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x73,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x74,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x75,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x76,\n    mnemonic: 'HALT',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x77,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x78,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x79,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7a,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7b,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7c,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7d,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7e,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7f,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x80,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x81,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x82,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x83,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x84,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x85,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x86,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x87,\n    mnemonic: 'ADD',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x88,\n    mnemonic: 'ADC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x89,\n    mnemonic: 'ADC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x8a,\n    mnemonic: 'ADC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x8b,\n    mnemonic: 'ADC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x8c,\n    mnemonic: 'ADC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x8d,\n    mnemonic: 'ADC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x8e,\n    mnemonic: 'ADC',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x8f,\n    mnemonic: 'ADC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x90,\n    mnemonic: 'SUB',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x91,\n    mnemonic: 'SUB',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x92,\n    mnemonic: 'SUB',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x93,\n    mnemonic: 'SUB',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x94,\n    mnemonic: 'SUB',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x95,\n    mnemonic: 'SUB',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x96,\n    mnemonic: 'SUB',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x97,\n    mnemonic: 'SUB',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '1',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x98,\n    mnemonic: 'SBC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x99,\n    mnemonic: 'SBC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x9a,\n    mnemonic: 'SBC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x9b,\n    mnemonic: 'SBC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x9c,\n    mnemonic: 'SBC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x9d,\n    mnemonic: 'SBC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x9e,\n    mnemonic: 'SBC',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x9f,\n    mnemonic: 'SBC',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xa0,\n    mnemonic: 'AND',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '0',\n    },\n  },\n  {\n    index: 0xa1,\n    mnemonic: 'AND',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '0',\n    },\n  },\n  {\n    index: 0xa2,\n    mnemonic: 'AND',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '0',\n    },\n  },\n  {\n    index: 0xa3,\n    mnemonic: 'AND',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '0',\n    },\n  },\n  {\n    index: 0xa4,\n    mnemonic: 'AND',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '0',\n    },\n  },\n  {\n    index: 0xa5,\n    mnemonic: 'AND',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '0',\n    },\n  },\n  {\n    index: 0xa6,\n    mnemonic: 'AND',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '0',\n    },\n  },\n  {\n    index: 0xa7,\n    mnemonic: 'AND',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '0',\n    },\n  },\n  {\n    index: 0xa8,\n    mnemonic: 'XOR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xa9,\n    mnemonic: 'XOR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xaa,\n    mnemonic: 'XOR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xab,\n    mnemonic: 'XOR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xac,\n    mnemonic: 'XOR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xad,\n    mnemonic: 'XOR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xae,\n    mnemonic: 'XOR',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xaf,\n    mnemonic: 'XOR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '1',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xb0,\n    mnemonic: 'OR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xb1,\n    mnemonic: 'OR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xb2,\n    mnemonic: 'OR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xb3,\n    mnemonic: 'OR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xb4,\n    mnemonic: 'OR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xb5,\n    mnemonic: 'OR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xb6,\n    mnemonic: 'OR',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xb7,\n    mnemonic: 'OR',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xb8,\n    mnemonic: 'CP',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xb9,\n    mnemonic: 'CP',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xba,\n    mnemonic: 'CP',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xbb,\n    mnemonic: 'CP',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xbc,\n    mnemonic: 'CP',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xbd,\n    mnemonic: 'CP',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xbe,\n    mnemonic: 'CP',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xbf,\n    mnemonic: 'CP',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '1',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xc0,\n    mnemonic: 'RET',\n    bytes: 1,\n    cycles: [20, 8],\n    operands: [\n      {\n        name: 'NZ',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc1,\n    mnemonic: 'POP',\n    bytes: 1,\n    cycles: [12],\n    operands: [\n      {\n        name: 'BC',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc2,\n    mnemonic: 'JP',\n    bytes: 3,\n    cycles: [16, 12],\n    operands: [\n      {\n        name: 'NZ',\n        immediate: true,\n      },\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc3,\n    mnemonic: 'JP',\n    bytes: 3,\n    cycles: [16],\n    operands: [\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc4,\n    mnemonic: 'CALL',\n    bytes: 3,\n    cycles: [24, 12],\n    operands: [\n      {\n        name: 'NZ',\n        immediate: true,\n      },\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc5,\n    mnemonic: 'PUSH',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: 'BC',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc6,\n    mnemonic: 'ADD',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xc7,\n    mnemonic: 'RST',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: '00H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc8,\n    mnemonic: 'RET',\n    bytes: 1,\n    cycles: [20, 8],\n    operands: [\n      {\n        name: 'Z',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc9,\n    mnemonic: 'RET',\n    bytes: 1,\n    cycles: [16],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xca,\n    mnemonic: 'JP',\n    bytes: 3,\n    cycles: [16, 12],\n    operands: [\n      {\n        name: 'Z',\n        immediate: true,\n      },\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xcb,\n    mnemonic: 'PREFIX',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xcc,\n    mnemonic: 'CALL',\n    bytes: 3,\n    cycles: [24, 12],\n    operands: [\n      {\n        name: 'Z',\n        immediate: true,\n      },\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xcd,\n    mnemonic: 'CALL',\n    bytes: 3,\n    cycles: [24],\n    operands: [\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xce,\n    mnemonic: 'ADC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xcf,\n    mnemonic: 'RST',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: '08H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd0,\n    mnemonic: 'RET',\n    bytes: 1,\n    cycles: [20, 8],\n    operands: [\n      {\n        name: 'NC',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd1,\n    mnemonic: 'POP',\n    bytes: 1,\n    cycles: [12],\n    operands: [\n      {\n        name: 'DE',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd2,\n    mnemonic: 'JP',\n    bytes: 3,\n    cycles: [16, 12],\n    operands: [\n      {\n        name: 'NC',\n        immediate: true,\n      },\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd3,\n    mnemonic: 'ILLEGAL_D3',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd4,\n    mnemonic: 'CALL',\n    bytes: 3,\n    cycles: [24, 12],\n    operands: [\n      {\n        name: 'NC',\n        immediate: true,\n      },\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd5,\n    mnemonic: 'PUSH',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: 'DE',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd6,\n    mnemonic: 'SUB',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xd7,\n    mnemonic: 'RST',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: '10H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd8,\n    mnemonic: 'RET',\n    bytes: 1,\n    cycles: [20, 8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd9,\n    mnemonic: 'RETI',\n    bytes: 1,\n    cycles: [16],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xda,\n    mnemonic: 'JP',\n    bytes: 3,\n    cycles: [16, 12],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xdb,\n    mnemonic: 'ILLEGAL_DB',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xdc,\n    mnemonic: 'CALL',\n    bytes: 3,\n    cycles: [24, 12],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xdd,\n    mnemonic: 'ILLEGAL_DD',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xde,\n    mnemonic: 'SBC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xdf,\n    mnemonic: 'RST',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: '18H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe0,\n    mnemonic: 'LDH',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 'a8',\n        bytes: 1,\n        immediate: false,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe1,\n    mnemonic: 'POP',\n    bytes: 1,\n    cycles: [12],\n    operands: [\n      {\n        name: 'HL',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe2,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'C',\n        immediate: false,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe3,\n    mnemonic: 'ILLEGAL_E3',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe4,\n    mnemonic: 'ILLEGAL_E4',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe5,\n    mnemonic: 'PUSH',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: 'HL',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe6,\n    mnemonic: 'AND',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '0',\n    },\n  },\n  {\n    index: 0xe7,\n    mnemonic: 'RST',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: '20H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe8,\n    mnemonic: 'ADD',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 'SP',\n        immediate: true,\n      },\n      {\n        name: 'r8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '0',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xe9,\n    mnemonic: 'JP',\n    bytes: 1,\n    cycles: [4],\n    operands: [\n      {\n        name: 'HL',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xea,\n    mnemonic: 'LD',\n    bytes: 3,\n    cycles: [16],\n    operands: [\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: false,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xeb,\n    mnemonic: 'ILLEGAL_EB',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xec,\n    mnemonic: 'ILLEGAL_EC',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xed,\n    mnemonic: 'ILLEGAL_ED',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xee,\n    mnemonic: 'XOR',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xef,\n    mnemonic: 'RST',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: '28H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf0,\n    mnemonic: 'LDH',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'a8',\n        bytes: 1,\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf1,\n    mnemonic: 'POP',\n    bytes: 1,\n    cycles: [12],\n    operands: [\n      {\n        name: 'AF',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: 'N',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xf2,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf3,\n    mnemonic: 'DI',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf4,\n    mnemonic: 'ILLEGAL_F4',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf5,\n    mnemonic: 'PUSH',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: 'AF',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf6,\n    mnemonic: 'OR',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0xf7,\n    mnemonic: 'RST',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: '30H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf8,\n    mnemonic: 'LD',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 'HL',\n        immediate: true,\n      },\n      {\n        name: 'SP',\n        increment: true,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '0',\n      N: '0',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xf9,\n    mnemonic: 'LD',\n    bytes: 1,\n    cycles: [8],\n    operands: [\n      {\n        name: 'SP',\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xfa,\n    mnemonic: 'LD',\n    bytes: 3,\n    cycles: [16],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n      {\n        name: 'a16',\n        bytes: 2,\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xfb,\n    mnemonic: 'EI',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xfc,\n    mnemonic: 'ILLEGAL_FC',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xfd,\n    mnemonic: 'ILLEGAL_FD',\n    bytes: 1,\n    cycles: [4],\n    operands: [],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xfe,\n    mnemonic: 'CP',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'd8',\n        bytes: 1,\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '1',\n      H: 'H',\n      C: 'C',\n    },\n  },\n  {\n    index: 0xff,\n    mnemonic: 'RST',\n    bytes: 1,\n    cycles: [16],\n    operands: [\n      {\n        name: '38H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n];\n\nexport const cbPrefixedOpcodes: OpcodeToken[] = [\n  {\n    index: 0x00,\n    mnemonic: 'RLC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x01,\n    mnemonic: 'RLC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x02,\n    mnemonic: 'RLC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x03,\n    mnemonic: 'RLC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x04,\n    mnemonic: 'RLC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x05,\n    mnemonic: 'RLC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x06,\n    mnemonic: 'RLC',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x07,\n    mnemonic: 'RLC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x08,\n    mnemonic: 'RRC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x09,\n    mnemonic: 'RRC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x0a,\n    mnemonic: 'RRC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x0b,\n    mnemonic: 'RRC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x0c,\n    mnemonic: 'RRC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x0d,\n    mnemonic: 'RRC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x0e,\n    mnemonic: 'RRC',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x0f,\n    mnemonic: 'RRC',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x10,\n    mnemonic: 'RL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x11,\n    mnemonic: 'RL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x12,\n    mnemonic: 'RL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x13,\n    mnemonic: 'RL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x14,\n    mnemonic: 'RL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x15,\n    mnemonic: 'RL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x16,\n    mnemonic: 'RL',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x17,\n    mnemonic: 'RL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x18,\n    mnemonic: 'RR',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x19,\n    mnemonic: 'RR',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x1a,\n    mnemonic: 'RR',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x1b,\n    mnemonic: 'RR',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x1c,\n    mnemonic: 'RR',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x1d,\n    mnemonic: 'RR',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x1e,\n    mnemonic: 'RR',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x1f,\n    mnemonic: 'RR',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x20,\n    mnemonic: 'SLA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x21,\n    mnemonic: 'SLA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x22,\n    mnemonic: 'SLA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x23,\n    mnemonic: 'SLA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x24,\n    mnemonic: 'SLA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x25,\n    mnemonic: 'SLA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x26,\n    mnemonic: 'SLA',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x27,\n    mnemonic: 'SLA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x28,\n    mnemonic: 'SRA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x29,\n    mnemonic: 'SRA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x2a,\n    mnemonic: 'SRA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x2b,\n    mnemonic: 'SRA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x2c,\n    mnemonic: 'SRA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x2d,\n    mnemonic: 'SRA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x2e,\n    mnemonic: 'SRA',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x2f,\n    mnemonic: 'SRA',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x30,\n    mnemonic: 'SWAP',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0x31,\n    mnemonic: 'SWAP',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0x32,\n    mnemonic: 'SWAP',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0x33,\n    mnemonic: 'SWAP',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0x34,\n    mnemonic: 'SWAP',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0x35,\n    mnemonic: 'SWAP',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0x36,\n    mnemonic: 'SWAP',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0x37,\n    mnemonic: 'SWAP',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: '0',\n    },\n  },\n  {\n    index: 0x38,\n    mnemonic: 'SRL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x39,\n    mnemonic: 'SRL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x3a,\n    mnemonic: 'SRL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x3b,\n    mnemonic: 'SRL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x3c,\n    mnemonic: 'SRL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x3d,\n    mnemonic: 'SRL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x3e,\n    mnemonic: 'SRL',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x3f,\n    mnemonic: 'SRL',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '0',\n      C: 'C',\n    },\n  },\n  {\n    index: 0x40,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x41,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x42,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x43,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x44,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x45,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x46,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x47,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x48,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x49,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4a,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4b,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4c,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4d,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4e,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x4f,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x50,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x51,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x52,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x53,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x54,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x55,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x56,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x57,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x58,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x59,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5a,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5b,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5c,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5d,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5e,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x5f,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x60,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x61,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x62,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x63,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x64,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x65,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x66,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x67,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x68,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x69,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6a,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6b,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6c,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6d,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6e,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x6f,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x70,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x71,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x72,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x73,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x74,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x75,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x76,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x77,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x78,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x79,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7a,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7b,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7c,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7d,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7e,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [12],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x7f,\n    mnemonic: 'BIT',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: 'Z',\n      N: '0',\n      H: '1',\n      C: '-',\n    },\n  },\n  {\n    index: 0x80,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x81,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x82,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x83,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x84,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x85,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x86,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x87,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x88,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x89,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x8a,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x8b,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x8c,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x8d,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x8e,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x8f,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x90,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x91,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x92,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x93,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x94,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x95,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x96,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x97,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x98,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x99,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x9a,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x9b,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x9c,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x9d,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x9e,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0x9f,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xa0,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xa1,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xa2,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xa3,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xa4,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xa5,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xa6,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xa7,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xa8,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xa9,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xaa,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xab,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xac,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xad,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xae,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xaf,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xb0,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xb1,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xb2,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xb3,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xb4,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xb5,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xb6,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xb7,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xb8,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xb9,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xba,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xbb,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xbc,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xbd,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xbe,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xbf,\n    mnemonic: 'RES',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc0,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc1,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc2,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc3,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc4,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc5,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc6,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc7,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 0,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc8,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xc9,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xca,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xcb,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xcc,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xcd,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xce,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xcf,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 1,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd0,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd1,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd2,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd3,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd4,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd5,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd6,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd7,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 2,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd8,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xd9,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xda,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xdb,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xdc,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xdd,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xde,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xdf,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 3,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe0,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe1,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe2,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe3,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe4,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe5,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe6,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe7,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 4,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe8,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xe9,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xea,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xeb,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xec,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xed,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xee,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xef,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 5,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf0,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf1,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf2,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf3,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf4,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf5,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf6,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf7,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 6,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf8,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'B',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xf9,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'C',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xfa,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'D',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xfb,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'E',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xfc,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'H',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xfd,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'L',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xfe,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [16],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'HL',\n        immediate: false,\n      },\n    ],\n    immediate: false,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n  {\n    index: 0xff,\n    mnemonic: 'SET',\n    bytes: 2,\n    cycles: [8],\n    operands: [\n      {\n        name: 7,\n        immediate: true,\n      },\n      {\n        name: 'A',\n        immediate: true,\n      },\n    ],\n    immediate: true,\n    flags: {\n      Z: '-',\n      N: '-',\n      H: '-',\n      C: '-',\n    },\n  },\n];\n","export const regA = 'A';\nexport const regB = 'B';\nexport const regC = 'C';\nexport const regD = 'D';\nexport const regE = 'E';\nexport const regF = 'F';\nexport const regH = 'H';\nexport const regL = 'L';\nexport const regSP = 'SP';\nexport const regPC = 'PC';\n\nexport const regAF = 'AF';\nexport const regBC = 'BC';\nexport const regDE = 'DE';\nexport const regHL = 'HL';\n\nexport const registers = {\n  [regA]: 0x00000000,\n  [regB]: 0x00000000,\n  [regC]: 0x00000000,\n  [regD]: 0x00000000,\n  [regE]: 0x00000000,\n  [regF]: 0x00000000,\n  [regH]: 0x00000000,\n  [regL]: 0x00000000,\n  [regSP]: 0x0000000000000000,\n  [regPC]: 0x0000000000000000,\n};\n\nfunction setRegisterPairValue(registerPair, value) {\n  function set16bitValues(highByteRegister, lowByteRegister, v) {\n    setRegisterValue(highByteRegister, (v >> 8) & 0xff);\n    setRegisterValue(lowByteRegister, v & 0xff);\n  }\n\n  switch (registerPair) {\n    case regAF:\n      set16bitValues(regA, regF, value);\n      break;\n    case regBC:\n      set16bitValues(regB, regC, value);\n      break;\n    case regDE:\n      set16bitValues(regD, regE, value);\n      break;\n    case regHL:\n      set16bitValues(regH, regL, value);\n      break;\n  }\n}\n\nfunction getRegisterPairValue(registerPair) {\n  function get16bitValues(highByteRegister, lowByteRegister) {\n    return (getRegisterValue(highByteRegister) << 8) + getRegisterValue(lowByteRegister);\n  }\n\n  switch (registerPair) {\n    case regAF:\n      return get16bitValues(regA, regF);\n    case regBC:\n      return get16bitValues(regB, regC);\n    case regDE:\n      return get16bitValues(regD, regE);\n    case regHL:\n      return get16bitValues(regH, regL);\n  }\n}\n\nexport function setRegisterValue(register, value) {\n  switch (register) {\n    case regA:\n    case regB:\n    case regC:\n    case regD:\n    case regE:\n    case regF:\n    case regH:\n    case regL:\n    case regSP:\n    case regPC:\n      registers[register] = value;\n      break;\n    case regAF:\n    case regBC:\n    case regDE:\n    case regHL:\n      setRegisterPairValue(register, value);\n      break;\n  }\n}\n\nexport function getRegisterValue(register) {\n  switch (register) {\n    case regA:\n    case regB:\n    case regC:\n    case regD:\n    case regE:\n    case regF:\n    case regH:\n    case regL:\n    case regSP:\n    case regPC:\n      return registers[register];\n    case regAF:\n    case regBC:\n    case regDE:\n    case regHL:\n      return getRegisterPairValue(register);\n  }\n}\n\n//@ts-ignore\nwindow.registers = registers;\n","import { readMem } from 'memory';\nimport { cbPrefixedOpcodes, opcodes } from 'opcodes';\nimport {\n  getRegisterValue,\n  regA,\n  regB,\n  regC,\n  regD,\n  regE,\n  regF,\n  regH,\n  regL,\n  regPC,\n  setRegisterValue,\n} from 'registers';\nimport { OpcodeToken } from 'types';\n\nlet index = 0;\n\nfunction logInstruction(name, opcodeToken) {\n  // console.log(index + ': ' + convertNumberToHexString(opcodeToken.index) + ' ' + name, opcodeToken);\n  index++;\n}\n\nfunction nop() {\n  logInstruction('NOP', opcodes[0x00]);\n  setRegisterValue(regPC, getRegisterValue(regPC) + 1);\n\n  return 4;\n}\n\nfunction bit(opcodeToken: OpcodeToken) {\n  const { operands, cycles, bytes } = opcodeToken;\n  const [bit, register] = operands;\n\n  const checkBit = 1 << (bit.name as number);\n\n  function setFlags(value) {\n    const currentRegFValue = getRegisterValue(regF);\n\n    const ZFlag = (value & checkBit) === 0 ? 0b10000000 : 0b00000000;\n    const NFlag = 0b00000000;\n    const HFlag = 0b00100000;\n    const CFlag = currentRegFValue & 0b00011111;\n\n    return ZFlag | NFlag | HFlag | CFlag;\n  }\n\n  switch (register.name) {\n    case regA:\n    case regB:\n    case regC:\n    case regD:\n    case regE:\n    case regF:\n    case regH:\n    case regL:\n      return function () {\n        logInstruction('BIT', opcodeToken);\n        const registerValue = getRegisterValue(register.name);\n\n        // update Z flag, reset flag N, set flag H\n        setRegisterValue(regF, setFlags(registerValue));\n\n        setRegisterValue(regPC, getRegisterValue(regPC) + bytes);\n\n        return cycles[0];\n      };\n\n    default:\n      // register HL\n      return function () {\n        logInstruction('BIT', opcodeToken);\n        const registerValue = readMem(getRegisterValue(register.name));\n\n        // update Z flag, reset flag N, set flag H\n        setRegisterValue(regF, setFlags(registerValue));\n\n        setRegisterValue(regPC, getRegisterValue(regPC) + bytes);\n\n        return cycles[0];\n      };\n  }\n}\n\nexport const cbInstructions: (() => number)[] = new Array(0x100);\n\nfor (let i = 0; i < cbInstructions.length; i++) {\n  cbInstructions[i] = nop;\n}\n\ncbInstructions[0x7c] = bit(cbPrefixedOpcodes[0x7c]);\n\n//@ts-ignore\nwindow.cbInstructions = cbInstructions;\n","export function convertNumberToHexString(n: number) {\n  return n.toString(16);\n}\n\nexport function convertHexStringToDecimalNumber(s: string) {\n  return parseInt(s, 16);\n}\n\nexport function zeroPad(n: number | string, paddedLength: number = 4) {\n  const numberAsHexString = typeof n === 'number' ? convertNumberToHexString(n) : n;\n\n  function doPadding(paddedLength: number, hexString: string) {\n    let pad = '';\n    while (pad.length < paddedLength - hexString.length) {\n      pad += '0';\n    }\n\n    return `${pad}${hexString}`;\n  }\n\n  return doPadding(paddedLength, numberAsHexString);\n}\n\nexport function signedOffset(value) {\n  return (value & 0x80) >> 7 === 1 ? value - 0x100 : value;\n}\n\n//https://gekkio.fi/blog/2015/mooneye-gb-a-gameboy-emulator-written-in-rust/\n","import { cbInstructions } from 'cb-instructions';\nimport { readMem, writeMem } from 'memory';\nimport { opcodes } from 'opcodes';\nimport {\n  getRegisterValue,\n  regA,\n  regB,\n  regC,\n  regD,\n  regE,\n  regF,\n  regH,\n  regHL,\n  registers,\n  regL,\n  regPC,\n  setRegisterValue,\n} from 'registers';\nimport { OpcodeToken } from 'types';\nimport { signedOffset } from 'utils';\n\nlet index = 0;\n\nfunction logInstruction(name, opcodeToken) {\n  // console.log(index + ': ' + convertNumberToHexString(opcodeToken.index) + ' ' + name, opcodeToken);\n  index++;\n}\n\nfunction nop() {\n  logInstruction('NOP', opcodes[0x00]);\n  setRegisterValue(regPC, getRegisterValue(regPC) + 1);\n\n  return 4;\n}\n\nfunction ld8Immediate(opcodeToken: OpcodeToken) {\n  const { operands, cycles, bytes } = opcodeToken;\n  const [destination, source] = operands;\n\n  switch (source.name) {\n    case regA:\n    case regB:\n    case regC:\n    case regD:\n    case regE:\n    case regF:\n    case regH:\n    case regL:\n      // Register to register\n      return function () {\n        logInstruction('LD8IM', opcodeToken);\n        setRegisterValue(destination.name, getRegisterValue(source.name));\n\n        setRegisterValue(regPC, getRegisterValue(regPC) + bytes);\n\n        return cycles[0];\n      };\n      break;\n    default:\n      // Value to register\n      return function () {\n        logInstruction('LD8IM', opcodeToken);\n        setRegisterValue(destination.name, readMem(registers[regPC] + 1));\n\n        setRegisterValue(regPC, getRegisterValue(regPC) + bytes);\n\n        return cycles[0];\n      };\n  }\n}\n\nfunction ld16Immediate(opcodeToken: OpcodeToken) {\n  const { operands, cycles, bytes } = opcodeToken;\n  const [destination, source] = operands;\n\n  switch (source.name) {\n    case regHL:\n      // HL to SP - OP 0xf9\n      return function () {\n        logInstruction('LD16IM', opcodeToken);\n        setRegisterValue(destination.name, getRegisterValue(source.name));\n\n        setRegisterValue(regPC, getRegisterValue(regPC) + bytes);\n\n        return cycles[0];\n      };\n    default:\n      // Value to register\n      return function () {\n        logInstruction('LD16IM', opcodeToken);\n        setRegisterValue(\n          destination.name,\n          readMem(registers[regPC] + 1) + (readMem(registers[regPC] + 2) << 8)\n        );\n\n        setRegisterValue(regPC, getRegisterValue(regPC) + bytes);\n\n        return cycles[0];\n      };\n  }\n}\n\nfunction ldd(opcodeToken: OpcodeToken) {\n  const { operands, cycles, bytes } = opcodeToken;\n  const [destination, source] = operands;\n\n  // ld a, (hl-)\n  if (destination.name === regA && source.name === regHL) {\n    return function () {\n      logInstruction('LDD', opcodeToken);\n      const valueHL = getRegisterValue(regHL);\n      setRegisterValue(regA, readMem(valueHL));\n      setRegisterValue(regHL, valueHL - 1);\n\n      setRegisterValue(regPC, getRegisterValue(regPC) + bytes);\n\n      return cycles[0];\n    };\n  }\n\n  // ld (hl-) a\n  return function () {\n    logInstruction('LDD', opcodeToken);\n    const valueHL = getRegisterValue(regHL);\n    writeMem(valueHL, getRegisterValue(regA));\n    setRegisterValue(regHL, valueHL - 1);\n\n    setRegisterValue(regPC, getRegisterValue(regPC) + bytes);\n\n    return cycles[0];\n  };\n}\n\nfunction xorImmediate(opcodeToken: OpcodeToken) {\n  const { operands, cycles, bytes } = opcodeToken;\n  const [source] = operands;\n\n  switch (source.name) {\n    case regA:\n    case regB:\n    case regC:\n    case regD:\n    case regE:\n    case regF:\n    case regH:\n    case regL:\n      // Register to register\n      return function () {\n        logInstruction('XORIM', opcodeToken);\n        const value = getRegisterValue(regA) ^ getRegisterValue(source.name);\n        setRegisterValue(regA, value);\n        // update Z flag and reset the rest of the flags\n        setRegisterValue(regF, value === 0 ? 0b10000000 : 0b00000000);\n\n        setRegisterValue(regPC, getRegisterValue(regPC) + bytes);\n\n        return cycles[0];\n      };\n    default:\n      // Value to register\n      return function () {\n        logInstruction('XORIM', opcodeToken);\n        setRegisterValue(regA, getRegisterValue(regA) ^ readMem(registers[regPC] + 1));\n        setRegisterValue(regPC, getRegisterValue(regPC) + bytes);\n\n        return cycles[0];\n      };\n  }\n}\n\nfunction cb() {\n  return cbInstructions[readMem(getRegisterValue(regPC) + 1)]();\n}\n\nfunction jrnz() {\n  const opcodeToken = opcodes[0x20];\n  const { cycles, bytes } = opcodeToken;\n\n  // 1 means we have a 0, 0 means we do not have a zero\n  const ZflagCheckBit = (getRegisterValue(regF) & 0b10000000) >> 7;\n\n  switch (ZflagCheckBit) {\n    case 0:\n      // not zero\n      logInstruction('JRNZ', opcodeToken);\n      const PCregValue = getRegisterValue(regPC);\n\n      setRegisterValue(regPC, PCregValue + bytes + signedOffset(readMem(PCregValue + 1)));\n\n      return cycles[0];\n    default:\n      // zero\n      logInstruction('JRNZ', opcodeToken);\n      debugger;\n      setRegisterValue(regPC, getRegisterValue(regPC) + bytes);\n\n      return cycles[1];\n  }\n}\n\nexport const instructions: (() => number)[] = new Array(0x100);\n\nfor (let i = 0; i < instructions.length; i++) {\n  instructions[i] = nop;\n}\n\ninstructions[0x00] = nop;\ninstructions[0x01] = ld16Immediate(opcodes[0x01]);\ninstructions[0x06] = ld8Immediate(opcodes[0x06]);\ninstructions[0x0e] = ld8Immediate(opcodes[0x0e]);\n\ninstructions[0x11] = ld16Immediate(opcodes[0x11]);\ninstructions[0x16] = ld8Immediate(opcodes[0x16]);\ninstructions[0x1e] = ld8Immediate(opcodes[0x1e]);\n\ninstructions[0x20] = jrnz;\ninstructions[0x21] = ld16Immediate(opcodes[0x21]);\ninstructions[0x26] = ld8Immediate(opcodes[0x26]);\ninstructions[0x2e] = ld8Immediate(opcodes[0x2e]);\n\ninstructions[0x31] = ld16Immediate(opcodes[0x31]);\ninstructions[0x32] = ldd(opcodes[0x32]);\ninstructions[0x36] = ld8Immediate(opcodes[0x36]);\ninstructions[0x3a] = ldd(opcodes[0x3a]);\ninstructions[0x3e] = ld8Immediate(opcodes[0x3e]);\n\ninstructions[0x40] = ld8Immediate(opcodes[0x40]);\ninstructions[0x41] = ld8Immediate(opcodes[0x41]);\ninstructions[0x42] = ld8Immediate(opcodes[0x42]);\ninstructions[0x43] = ld8Immediate(opcodes[0x43]);\ninstructions[0x44] = ld8Immediate(opcodes[0x44]);\ninstructions[0x45] = ld8Immediate(opcodes[0x45]);\ninstructions[0x47] = ld8Immediate(opcodes[0x47]);\ninstructions[0x48] = ld8Immediate(opcodes[0x48]);\ninstructions[0x49] = ld8Immediate(opcodes[0x49]);\ninstructions[0x4a] = ld8Immediate(opcodes[0x4a]);\ninstructions[0x4b] = ld8Immediate(opcodes[0x4b]);\ninstructions[0x4c] = ld8Immediate(opcodes[0x4c]);\ninstructions[0x4d] = ld8Immediate(opcodes[0x4d]);\ninstructions[0x4f] = ld8Immediate(opcodes[0x4f]);\n\ninstructions[0x50] = ld8Immediate(opcodes[0x50]);\ninstructions[0x51] = ld8Immediate(opcodes[0x51]);\ninstructions[0x52] = ld8Immediate(opcodes[0x52]);\ninstructions[0x53] = ld8Immediate(opcodes[0x53]);\ninstructions[0x54] = ld8Immediate(opcodes[0x54]);\ninstructions[0x55] = ld8Immediate(opcodes[0x55]);\ninstructions[0x57] = ld8Immediate(opcodes[0x57]);\ninstructions[0x58] = ld8Immediate(opcodes[0x58]);\ninstructions[0x59] = ld8Immediate(opcodes[0x59]);\ninstructions[0x5a] = ld8Immediate(opcodes[0x5a]);\ninstructions[0x5b] = ld8Immediate(opcodes[0x5b]);\ninstructions[0x5c] = ld8Immediate(opcodes[0x5c]);\ninstructions[0x5d] = ld8Immediate(opcodes[0x5d]);\ninstructions[0x5f] = ld8Immediate(opcodes[0x5f]);\n\ninstructions[0x60] = ld8Immediate(opcodes[0x60]);\ninstructions[0x61] = ld8Immediate(opcodes[0x61]);\ninstructions[0x62] = ld8Immediate(opcodes[0x62]);\ninstructions[0x63] = ld8Immediate(opcodes[0x63]);\ninstructions[0x64] = ld8Immediate(opcodes[0x64]);\ninstructions[0x65] = ld8Immediate(opcodes[0x65]);\ninstructions[0x67] = ld8Immediate(opcodes[0x67]);\ninstructions[0x68] = ld8Immediate(opcodes[0x68]);\ninstructions[0x69] = ld8Immediate(opcodes[0x69]);\ninstructions[0x6a] = ld8Immediate(opcodes[0x6a]);\ninstructions[0x6b] = ld8Immediate(opcodes[0x6b]);\ninstructions[0x6c] = ld8Immediate(opcodes[0x6c]);\ninstructions[0x6d] = ld8Immediate(opcodes[0x6d]);\ninstructions[0x6f] = ld8Immediate(opcodes[0x6f]);\n\ninstructions[0x78] = ld8Immediate(opcodes[0x78]);\ninstructions[0x79] = ld8Immediate(opcodes[0x79]);\ninstructions[0x7a] = ld8Immediate(opcodes[0x7a]);\ninstructions[0x7b] = ld8Immediate(opcodes[0x7b]);\ninstructions[0x7c] = ld8Immediate(opcodes[0x7c]);\ninstructions[0x7d] = ld8Immediate(opcodes[0x7d]);\ninstructions[0x7f] = ld8Immediate(opcodes[0x7f]);\n\ninstructions[0xa8] = xorImmediate(opcodes[0xa8]);\ninstructions[0xa9] = xorImmediate(opcodes[0xa9]);\ninstructions[0xaa] = xorImmediate(opcodes[0xaa]);\ninstructions[0xab] = xorImmediate(opcodes[0xab]);\ninstructions[0xac] = xorImmediate(opcodes[0xac]);\ninstructions[0xad] = xorImmediate(opcodes[0xad]);\ninstructions[0xaf] = xorImmediate(opcodes[0xaf]);\n\ninstructions[0xcb] = cb;\n\ninstructions[0xee] = xorImmediate(opcodes[0xee]);\n\ninstructions[0xf9] = ld8Immediate(opcodes[0xf9]);\n\n//@ts-ignore\nwindow.instructions = instructions;\n","import { cbPrefixedOpcodes, opcodes } from 'opcodes';\nimport type { OpcodeToken, Operands } from 'types.d';\nimport { convertHexStringToDecimalNumber, convertNumberToHexString, zeroPad } from 'utils';\nimport type { DisassembledInstructionToken } from './types.d';\n\nfunction replaceOperandTypeWithValue(operand: Operands, bytecode: Uint8Array, index: number) {\n  switch (operand) {\n    case 'a8':\n    case 'r8':\n    case 'd8':\n      return `$${zeroPad(convertNumberToHexString(bytecode[index + 1]), 2)}`;\n    case 'a16':\n    case 'd16':\n      return `$${zeroPad(convertNumberToHexString(bytecode[index + 2]), 2)}${zeroPad(\n        convertNumberToHexString(bytecode[index + 1]),\n        2\n      )}`;\n    default:\n      return operand;\n  }\n}\n\nfunction generateDisassembledInstructionToken(\n  opcodeToken: OpcodeToken | undefined,\n  bytecode: Uint8Array,\n  index: number\n): DisassembledInstructionToken {\n  if (!opcodeToken) {\n    return {\n      position: `$${zeroPad(index, 4)}`,\n      code: `Unknown opcode`,\n    };\n  }\n\n  const { mnemonic, operands } = opcodeToken;\n  const code = operands.reduce(function (acc, operand, i) {\n    if (i === 0) {\n      acc = acc + ' ';\n    } else {\n      acc = acc + ',';\n    }\n\n    const formattedOperand =\n      replaceOperandTypeWithValue(operand.name, bytecode, index) +\n      (operand.increment ? '+' : operand.decrement ? '-' : '');\n\n    return acc + (operand.immediate ? formattedOperand : `(${formattedOperand})`);\n  }, `${mnemonic}`);\n\n  return {\n    position: `$${zeroPad(index, 4)}`,\n    code,\n  };\n}\n\nexport default function disassemble(bytecode: Uint8Array, dataRanges: [number, number][]) {\n  const disassembledCode: DisassembledInstructionToken[] = [];\n\n  for (let i = 0; i < bytecode.length; ) {\n    const opcode = bytecode[i];\n    let dataByte = false;\n\n    for (let k = 0; k < dataRanges.length; k++) {\n      if (i >= dataRanges[k][0] && i <= dataRanges[k][1]) {\n        dataByte = true;\n      }\n    }\n\n    if (dataByte) {\n      disassembledCode.push({\n        position: `$${zeroPad(i, 4)}`,\n        code: `DATA: ${zeroPad(convertNumberToHexString(opcode), 2)}`,\n      });\n      i++;\n    } else {\n      const opcodeToken = opcodes[opcode];\n\n      if (!opcodeToken) {\n        disassembledCode.push(generateDisassembledInstructionToken(opcodeToken, bytecode, i));\n        i++;\n      } else {\n        switch (opcode) {\n          // opcode 0xcb references opcodesDEPRECATED from the CB opcode dictionary so it needs special handling\n          case convertHexStringToDecimalNumber('0xcb'): {\n            const referencedObOpcodeToken = cbPrefixedOpcodes[bytecode[i + opcodeToken.bytes]];\n            disassembledCode.push(\n              generateDisassembledInstructionToken(referencedObOpcodeToken, bytecode, i)\n            );\n            if (referencedObOpcodeToken) {\n              i += referencedObOpcodeToken.bytes;\n            } else {\n              i += opcodeToken.bytes;\n            }\n            break;\n          }\n          default:\n            disassembledCode.push(generateDisassembledInstructionToken(opcodeToken, bytecode, i));\n            i += opcodeToken.bytes;\n        }\n      }\n    }\n  }\n\n  return disassembledCode;\n}\n","import { convertHexStringToDecimalNumber } from './utils';\n\nconst bootCode =\n  /* 00000000 */ '31 fe ff af 21 ff 9f 32 cb 7c 20 fb 21 26 ff 0e ' +\n  /* 00000010 */ '11 3e 80 32 e2 0c 3e f3 e2 32 3e 77 77 3e fc e0 ' +\n  /* 00000020 */ '47 11 04 01 21 10 80 1a cd 95 00 cd 96 00 13 7b ' +\n  /* 00000030 */ 'fe 34 20 f3 11 d8 00 06 08 1a 13 22 23 05 20 f9 ' +\n  /* 00000040 */ '3e 19 ea 10 99 21 2f 99 0e 0c 3d 28 08 32 0d 20 ' +\n  /* 00000050 */ 'f9 2e 0f 18 f3 67 3e 64 57 e0 42 3e 91 e0 40 04 ' +\n  /* 00000060 */ '1e 02 0e 0c f0 44 fe 90 20 fa 0d 20 f7 1d 20 f2 ' +\n  /* 00000070 */ '0e 13 24 7c 1e 83 fe 62 28 06 1e c1 fe 64 20 06 ' +\n  /* 00000080 */ '7b e2 0c 3e 87 e2 f0 42 90 e0 42 15 20 d2 05 20 ' +\n  /* 00000090 */ '4f 16 20 18 cb 4f 06 04 c5 cb 11 17 c1 cb 11 17 ' +\n  /* 000000a0 */ '05 20 f5 22 23 22 23 c9 ce ed 66 66 cc 0d 00 0b ' +\n  /* 000000b0 */ '03 73 00 83 00 0c 00 0d 00 08 11 1f 88 89 00 0e ' +\n  /* 000000c0 */ 'dc cc 6e e6 dd dd d9 99 bb bb 67 63 6e 0e ec cc ' +\n  /* 000000d0 */ 'dd dc 99 9f bb b9 33 3e 3c 42 b9 a5 b9 a5 42 3c ' +\n  /* 000000e0 */ '21 04 01 11 a8 00 1a 13 be 20 fe 23 7d fe 34 20 ' +\n  /* 000000f0 */ 'f5 06 19 78 86 23 05 20 fb 86 20 fe 3e 01 e0 50';\n\n// The bootcode is 256 bytes, so that's how long the typed array should be\nconst bootCodeUIntArr = new Uint8Array(0x100);\n\n// Each character couple is a byte in hex\n// Step is 3 to accommodate for the spaces, otherwise it would be 2\nconst loopStep = 3;\n\nfor (let i = 0; i < bootCode.length; i += loopStep) {\n  // Keep the bootCodeUIntArr index incrementing by +1 on each iteration\n  bootCodeUIntArr[i / loopStep] = convertHexStringToDecimalNumber(\n    `${bootCode[i]}${bootCode[i + 1]}`\n  );\n}\n\nexport default bootCodeUIntArr;\n","import { cpu } from 'cpu';\nimport disassemble from 'disassembler';\nimport { memory } from 'memory';\nimport { Fragment, useEffect, useState } from 'react';\nimport { registers, regPC } from 'registers';\nimport bootcode from './bootcode';\n\nconst emptyBootcode = new Uint8Array(256);\n\nfunction App() {\n  const [bootCode, setBootCode] = useState(bootcode);\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setBootCode(bootcode);\n  //   }, 2000);\n  // }, []);\n\n  useEffect(() => {\n    memory.set(bootcode);\n\n    while (registers[regPC] < 13) {\n      cpu();\n    }\n\n    // let cont = true;\n    // while (cont) {\n    //   try {\n    //     const cycles = cpu();\n    //   } catch (e) {\n    //     cont = false;\n    //   }\n    // }\n  }, []);\n\n  //@ts-ignore\n  window.bootCode = bootCode;\n\n  const disassembledCode = disassemble(bootCode, [[0x00a8, 0x00df]]);\n\n  // window.alert('adasd');\n\n  return (\n    <Fragment>\n      <div className=\"screen-container\">\n        <h2>GameBoy emulator</h2>\n        <canvas height={144} width={160} />\n        {bootCode ? (\n          <span>{bootCode === emptyBootcode ? 'loading bootcode' : 'bootcode loaded'}</span>\n        ) : (\n          <Fragment>\n            <span>drop the bootcode here</span>\n            <input\n              type=\"file\"\n              onChange={(e) => {\n                //@ts-ignore\n                if (e.target.files.length) {\n                  const reader = new FileReader();\n\n                  reader.onload = function (e) {\n                    //@ts-ignore\n                    setBootCode(new Uint8Array(e.target.result));\n                  };\n\n                  //@ts-ignore\n                  reader.readAsArrayBuffer(e.target.files[0]);\n                }\n              }}\n            />\n          </Fragment>\n        )}\n      </div>\n      {bootCode ? (\n        <Fragment>\n          <div className=\"bootcode-container\">\n            <h2>Boot code</h2>\n            <code>\n              {bootCode === emptyBootcode ? (\n                <pre>\n                  <strong>{'       x0 x1 x2 x3 x4 x5 x6 x7  x8 x9 xa xb xc xd xe xf'}</strong>\n                  <br />\n                  <br />\n                  <strong>$000x</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$001x</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$002x</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$003x</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$004x</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$005x</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$006x</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$007x</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$008x</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$009x</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$00ax</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$00bx</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$00cx</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$00dx</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$00ex</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                  <strong>$00fx</strong>\n                  {'  '}00 00 00 00 00 00 00 00{'  '}00 00 00 00 00 00 00 00\n                  <br />\n                </pre>\n              ) : (\n                <pre>\n                  <strong>{'       x0 x1 x2 x3 x4 x5 x6 x7  x8 x9 xa xb xc xd xe xf'}</strong>\n                  <br />\n                  <br />\n                  <strong>$000x</strong>\n                  {'  '}31 fe ff af 21 ff 9f 32{'  '}cb 7c 20 fb 21 26 ff 0e\n                  <br />\n                  <strong>$001x</strong>\n                  {'  '}11 3e 80 32 e2 0c 3e f3{'  '}e2 32 3e 77 77 3e fc e0\n                  <br />\n                  <strong>$002x</strong>\n                  {'  '}47 11 04 01 21 10 80 1a{'  '}cd 95 00 cd 96 00 13 7b\n                  <br />\n                  <strong>$003x</strong>\n                  {'  '}fe 34 20 f3 11 d8 00 06{'  '}08 1a 13 22 23 05 20 f9\n                  <br />\n                  <strong>$004x</strong>\n                  {'  '}3e 19 ea 10 99 21 2f 99{'  '}0e 0c 3d 28 08 32 0d 20\n                  <br />\n                  <strong>$005x</strong>\n                  {'  '}f9 2e 0f 18 f3 67 3e 64{'  '}57 e0 42 3e 91 e0 40 04\n                  <br />\n                  <strong>$006x</strong>\n                  {'  '}1e 02 0e 0c f0 44 fe 90{'  '}20 fa 0d 20 f7 1d 20 f2\n                  <br />\n                  <strong>$007x</strong>\n                  {'  '}0e 13 24 7c 1e 83 fe 62{'  '}28 06 1e c1 fe 64 20 06\n                  <br />\n                  <strong>$008x</strong>\n                  {'  '}7b e2 0c 3e 87 e2 f0 42{'  '}90 e0 42 15 20 d2 05 20\n                  <br />\n                  <strong>$009x</strong>\n                  {'  '}4f 16 20 18 cb 4f 06 04{'  '}c5 cb 11 17 c1 cb 11 17\n                  <br />\n                  <strong>$00ax</strong>\n                  {'  '}05 20 f5 22 23 22 23 c9{'  '}ce ed 66 66 cc 0d 00 0b\n                  <br />\n                  <strong>$00bx</strong>\n                  {'  '}03 73 00 83 00 0c 00 0d{'  '}00 08 11 1f 88 89 00 0e\n                  <br />\n                  <strong>$00cx</strong>\n                  {'  '}dc cc 6e e6 dd dd d9 99{'  '}bb bb 67 63 6e 0e ec cc\n                  <br />\n                  <strong>$00dx</strong>\n                  {'  '}dd dc 99 9f bb b9 33 3e{'  '}3c 42 b9 a5 b9 a5 42 3c\n                  <br />\n                  <strong>$00ex</strong>\n                  {'  '}21 04 01 11 a8 00 1a 13{'  '}be 20 fe 23 7d fe 34 20\n                  <br />\n                  <strong>$00fx</strong>\n                  {'  '}f5 06 19 78 86 23 05 20{'  '}fb 86 20 fe 3e 01 e0 50\n                  <br />\n                </pre>\n              )}\n            </code>\n          </div>\n          <div className=\"disassembled-bootcode-container\">\n            <h2>Disassembled boot code</h2>\n            <code>\n              <pre>\n                {disassembledCode.map((line) => {\n                  return (\n                    <Fragment key={line.position}>\n                      <span>\n                        <strong>{line.position}</strong>\n                        {'  '}\n                        {line.code}\n                      </span>\n                      <br />\n                    </Fragment>\n                  );\n                })}\n              </pre>\n            </code>\n          </div>\n        </Fragment>\n      ) : null}\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { instructions } from 'instructions';\nimport { readMem } from 'memory';\nimport { registers, regPC } from 'registers';\n\nexport function cpu() {\n  return instructions[readMem(registers[regPC])]();\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}